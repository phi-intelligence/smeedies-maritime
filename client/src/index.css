@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes float {
  0%, 100% {
    transform: translateY(0px) scale(1);
  }
  50% {
    transform: translateY(-10px) scale(1.02);
  }
}

@keyframes fadeInScale {
  0% {
    opacity: 0;
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes routeDraw {
  0% {
    stroke-dashoffset: 100;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

/* Scroll Animation Keyframes */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 40px, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translate3d(-40px, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translate3d(40px, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Animation Classes */
.animate-fade-in-up {
  animation: fadeInUp 0.8s ease-out forwards;
}

.animate-fade-in-left {
  animation: fadeInLeft 0.8s ease-out forwards;
}

.animate-fade-in-right {
  animation: fadeInRight 0.8s ease-out forwards;
}

.animate-fade-in-scale {
  animation: fadeInScale 0.8s ease-out forwards;
}

/* Initially hidden state */
.animate-on-scroll {
  opacity: 0;
  transform: translate3d(0, 40px, 0);
  animation: none !important;
}

/* Specific initial state for service cards */
.animate-on-scroll.animate-fade-in-up {
  opacity: 0;
  transform: translate3d(0, 40px, 0);
  animation: none !important;
}

.animate-on-scroll.animate-fade-in-left {
  animation: none !important;
}

.animate-on-scroll.animate-fade-in-right {
  animation: none !important;
}

.animate-on-scroll.animate-fade-in-scale {
  animation: none !important;
}

/* Service Card Animations - Simple pop-up from bottom */
.service-card-animated {
  animation-fill-mode: forwards;
}

.service-card-animated.animate-delay-100,
.service-card-animated.animate-delay-200,
.service-card-animated.animate-delay-300,
.service-card-animated.animate-delay-400 {
  animation: emergeFromNothing 1.2s ease-out forwards;
}

@keyframes emergeFromNothing {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes slideInFromLeft {
  0% {
    opacity: 0;
    transform: translateX(-150px) translateY(50px) rotateY(-25deg) scale(0.8);
  }
  30% {
    opacity: 0.6;
    transform: translateX(-20px) translateY(-10px) rotateY(8deg) scale(1.1);
  }
  60% {
    opacity: 0.9;
    transform: translateX(5px) translateY(5px) rotateY(-3deg) scale(1.05);
  }
  100% {
    opacity: 1;
    transform: translateX(0) translateY(0) rotateY(0deg) scale(1);
  }
}

@keyframes slideInFromBottom {
  0% {
    opacity: 0;
    transform: translateY(150px) translateX(30px) rotateX(25deg) scale(0.7);
  }
  30% {
    opacity: 0.6;
    transform: translateY(-20px) translateX(-10px) rotateX(-8deg) scale(1.15);
  }
  60% {
    opacity: 0.9;
    transform: translateY(8px) translateX(3px) rotateX(2deg) scale(1.05);
  }
  100% {
    opacity: 1;
    transform: translateY(0) translateX(0) rotateX(0deg) scale(1);
  }
}

@keyframes slideInFromRight {
  0% {
    opacity: 0;
    transform: translateX(150px) translateY(-40px) rotateY(25deg) scale(0.8);
  }
  30% {
    opacity: 0.6;
    transform: translateX(-15px) translateY(12px) rotateY(-10deg) scale(1.1);
  }
  60% {
    opacity: 0.9;
    transform: translateX(-5px) translateY(-3px) rotateY(2deg) scale(1.05);
  }
  100% {
    opacity: 1;
    transform: translateX(0) translateY(0) rotateY(0deg) scale(1);
  }
}

@keyframes slideInFromTop {
  0% {
    opacity: 0;
    transform: translateY(-150px) translateX(-20px) rotateX(-25deg) scale(0.7);
  }
  30% {
    opacity: 0.6;
    transform: translateY(15px) translateX(8px) rotateX(10deg) scale(1.15);
  }
  60% {
    opacity: 0.9;
    transform: translateY(-5px) translateX(-2px) rotateX(-2deg) scale(1.05);
  }
  100% {
    opacity: 1;
    transform: translateY(0) translateX(0) rotateX(0deg) scale(1);
  }
}

/* Delayed animations */
.animate-delay-100 {
  animation-delay: 0.1s;
}

.animate-delay-200 {
  animation-delay: 0.2s;
}

.animate-delay-300 {
  animation-delay: 0.3s;
}

.animate-delay-400 {
  animation-delay: 0.4s;
}

.animate-delay-500 {
  animation-delay: 0.5s;
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-fade-in-scale {
  animation: fadeInScale 1.5s ease-out forwards;
}

.animate-route-draw {
  animation: routeDraw 2s ease-out forwards;
}

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 100%;

  --foreground: 217 71% 15%;

  --border: 220 13% 91%;

  --card: 0 0% 98%;

  --card-foreground: 217 71% 15%;

  --card-border: 220 13% 93%;

  --sidebar: 220 9% 96%;

  --sidebar-foreground: 217 71% 15%;

  --sidebar-border: 220 13% 91%;

  --sidebar-primary: 217 71% 28%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 217 20% 88%;

  --sidebar-accent-foreground: 217 71% 20%;

  --sidebar-ring: 217 91% 60%;

  --popover: 220 9% 94%;

  --popover-foreground: 217 71% 15%;

  --popover-border: 220 13% 89%;

  --primary: 217 71% 28%;

  --primary-foreground: 0 0% 98%;

  --secondary: 220 9% 90%;

  --secondary-foreground: 217 71% 20%;

  --muted: 220 13% 92%;

  --muted-foreground: 217 30% 35%;

  --accent: 217 15% 90%;

  --accent-foreground: 217 71% 20%;

  --destructive: 0 84% 35%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 13% 75%;
  --ring: 217 91% 60%;
  --chart-1: 217 71% 28%;
  --chart-2: 38 92% 50%;
  --chart-3: 160 84% 39%;
  --chart-4: 217 91% 60%;
  --chart-5: 220 30% 45%;

  --font-sans: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 13% 9% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(220 13% 9% / 0.08);
  --shadow-sm: 0px 2px 4px 0px hsl(220 13% 9% / 0.06), 0px 1px 2px -1px hsl(220 13% 9% / 0.06);
  --shadow: 0px 4px 6px -1px hsl(220 13% 9% / 0.08), 0px 2px 4px -2px hsl(220 13% 9% / 0.08);
  --shadow-md: 0px 6px 8px -1px hsl(220 13% 9% / 0.10), 0px 4px 6px -2px hsl(220 13% 9% / 0.10);
  --shadow-lg: 0px 10px 15px -3px hsl(220 13% 9% / 0.12), 0px 4px 6px -4px hsl(220 13% 9% / 0.08);
  --shadow-xl: 0px 20px 25px -5px hsl(220 13% 9% / 0.14), 0px 8px 10px -6px hsl(220 13% 9% / 0.08);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 13% 9% / 0.18);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 26% 14%;

  --foreground: 0 0% 95%;

  --border: 217 20% 24%;

  --card: 217 26% 17%;

  --card-foreground: 0 0% 95%;

  --card-border: 217 20% 22%;

  --sidebar: 220 26% 16%;

  --sidebar-foreground: 0 0% 95%;

  --sidebar-border: 217 20% 21%;

  --sidebar-primary: 217 71% 28%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 217 18% 24%;

  --sidebar-accent-foreground: 217 60% 85%;

  --sidebar-ring: 217 91% 60%;

  --popover: 217 26% 19%;

  --popover-foreground: 0 0% 95%;

  --popover-border: 217 20% 24%;

  --primary: 217 71% 28%;

  --primary-foreground: 0 0% 98%;

  --secondary: 220 18% 25%;

  --secondary-foreground: 217 60% 85%;

  --muted: 220 18% 22%;

  --muted-foreground: 217 30% 70%;

  --accent: 217 18% 23%;

  --accent-foreground: 217 60% 85%;

  --destructive: 0 84% 35%;

  --destructive-foreground: 0 0% 98%;

  --input: 217 20% 45%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 60%;
  --chart-2: 38 92% 55%;
  --chart-3: 160 84% 50%;
  --chart-4: 217 60% 75%;
  --chart-5: 220 30% 65%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.30);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.35);
  --shadow-sm: 0px 2px 4px 0px hsl(0 0% 0% / 0.30), 0px 1px 2px -1px hsl(0 0% 0% / 0.30);
  --shadow: 0px 4px 6px -1px hsl(0 0% 0% / 0.35), 0px 2px 4px -2px hsl(0 0% 0% / 0.35);
  --shadow-md: 0px 6px 8px -1px hsl(0 0% 0% / 0.40), 0px 4px 6px -2px hsl(0 0% 0% / 0.40);
  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.45), 0px 4px 6px -4px hsl(0 0% 0% / 0.35);
  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.50), 0px 8px 10px -6px hsl(0 0% 0% / 0.35);
  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.60);

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}